(function(n){typeof define=="function"&&define.amd?define(["jquery"],n):typeof exports=="object"?module.exports=n(require("jquery")):n(jQuery)})(function(n){function r(n,t){n.addClass("tree-selected");n.data("type")==="item"&&t.hasClass("fueluxicon-bullet")&&t.removeClass("fueluxicon-bullet").addClass("glyphicon-ok")}function i(n,t){n.removeClass("tree-selected");n.data("type")==="item"&&t.hasClass("glyphicon-ok")&&t.removeClass("glyphicon-ok").addClass("fueluxicon-bullet")}function f(t,u,f){n.each(f.$elements,function(t,i){var r=n(i);r[0]!==u.$element[0]&&f.dataForEvent.push(n(r).data())});u.$element.hasClass("tree-selected")?(i(u.$element,u.$icon),f.eventType="deselected"):(r(u.$element,u.$icon),f.eventType="selected",f.dataForEvent.push(u.elementData))}function e(n,t,u){if(u.$elements[0]!==t.$element[0]){var f=n.deselectAll(n.$element);r(t.$element,t.$icon);u.eventType="selected";u.dataForEvent=[t.elementData]}else i(t.$element,t.$icon),u.eventType="deselected",u.dataForEvent=[]}var u=n.fn.tree,t=function(t,i){if(this.$element=n(t),this.options=n.extend({},n.fn.tree.defaults,i),this.options.itemSelect)this.$element.on("click.fu.tree",".tree-item",n.proxy(function(n){this.selectItem(n.currentTarget)},this));this.$element.on("click.fu.tree",".tree-branch-name",n.proxy(function(n){this.toggleFolder(n.currentTarget)},this));if(this.options.folderSelect){this.$element.addClass("tree-folder-select");this.$element.off("click.fu.tree",".tree-branch-name");this.$element.on("click.fu.tree",".icon-caret",n.proxy(function(t){this.toggleFolder(n(t.currentTarget).parent())},this));this.$element.on("click.fu.tree",".tree-branch-name",n.proxy(function(t){this.selectFolder(n(t.currentTarget))},this))}this.render()};t.prototype={constructor:t,deselectAll:function(t){t=t||this.$element;var r=n(t).find(".tree-selected");return r.each(function(t,r){i(n(r),n(r).find(".glyphicon"))}),r},destroy:function(){return this.$element.find("li:not([data-template])").remove(),this.$element.remove(),this.$element[0].outerHTML},render:function(){this.populate(this.$element)},populate:function(t,i){var u=this,r=t.hasClass("tree")?t:t.parent(),f=r.find(".tree-loader:eq(0)"),e=r.data();i=i||!1;i===!1&&f.removeClass("hide hidden");this.options.dataSource(e?e:{},function(i){f.addClass("hidden");n.each(i.data,function(i,f){var e,o;f.type==="folder"?(e=u.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide hidden").removeData("template"),e.data(f),e.find(".tree-branch-name > .tree-label").html(f.text||f.name)):f.type==="item"&&(e=u.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide hidden").removeData("template"),e.find(".tree-item-name > .tree-label").html(f.text||f.name),e.data(f));o=f.attr||f.dataAttributes||[];n.each(o,function(n,t){switch(n){case"cssClass":case"class":case"className":e.addClass(t);break;case"data-icon":e.find(".icon-item").removeClass().addClass("icon-item "+t);e.attr(n,t);break;case"id":e.attr(n,t);e.attr("aria-labelledby",t+"-label");e.find(".tree-branch-name > .tree-label").attr("id",t+"-label");break;default:e.attr(n,t)}});t.hasClass("tree-branch-header")?r.find(".tree-branch-children:eq(0)").append(e):t.append(e)});u.$element.trigger("loaded.fu.tree",r)})},selectTreeNode:function(t,i){var r={},u;r.$element=n(t);u={};u.$elements=this.$element.find(".tree-selected");u.dataForEvent=[];i==="folder"?(r.$element=r.$element.closest(".tree-branch"),r.$icon=r.$element.find(".icon-folder")):r.$icon=r.$element.find(".icon-item");r.elementData=r.$element.data();this.options.multiSelect?f(this,r,u):e(this,r,u);this.$element.trigger(u.eventType+".fu.tree",{target:r.elementData,selected:u.dataForEvent});r.$element.trigger("updated.fu.tree",{selected:u.dataForEvent,item:r.$element,eventType:u.eventType})},discloseFolder:function(t){var u=n(t),i=u.closest(".tree-branch"),r=i.find(".tree-branch-children"),f=r.eq(0);i.addClass("tree-open");i.attr("aria-expanded","true");f.removeClass("hide hidden");i.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-close").addClass("glyphicon-folder-open");r.children().length||this.populate(r);this.$element.trigger("disclosedFolder.fu.tree",i.data())},closeFolder:function(t){var u=n(t),i=u.closest(".tree-branch"),f=i.find(".tree-branch-children"),r=f.eq(0);i.removeClass("tree-open");i.attr("aria-expanded","false");r.addClass("hidden");i.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-open").addClass("glyphicon-folder-close");this.options.cacheItems||r.empty();this.$element.trigger("closed.fu.tree",i.data())},toggleFolder:function(t){var i=n(t);i.find(".glyphicon-folder-close").length?this.discloseFolder(t):i.find(".glyphicon-folder-open").length&&this.closeFolder(t)},selectFolder:function(n){this.options.folderSelect&&this.selectTreeNode(n,"folder")},selectItem:function(n){this.options.itemSelect&&this.selectTreeNode(n,"item")},selectedItems:function(){var i=this.$element.find(".tree-selected"),t=[];return n.each(i,function(i,r){t.push(n(r).data())}),t},collapse:function(){var n=this,t=[],i=function i(r,u){t.push(u);n.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").length===0&&(n.$element.trigger("closedAll.fu.tree",{tree:n.$element,reportedClosed:t}),n.$element.off("loaded.fu.tree",n.$element,i))};n.$element.on("closed.fu.tree",i);n.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").each(function(){n.closeFolder(this)})},discloseVisible:function(){var t=this,u=t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')"),i=[],r=function r(n,f){i.push(f);i.length===u.length&&(t.$element.trigger("disclosedVisible.fu.tree",{tree:t.$element,reportedOpened:i}),t.$element.off("loaded.fu.tree",t.$element,r))};t.$element.on("loaded.fu.tree",r);t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").each(function(){t.discloseFolder(n(this).find(".tree-branch-header"))})},discloseAll:function(){var n=this,t,i;if(typeof n.$element.data("disclosures")=="undefined"&&n.$element.data("disclosures",0),t=n.options.disclosuresUpperLimit>=1&&n.$element.data("disclosures")>=n.options.disclosuresUpperLimit,i=n.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").length===0,i){if(n.$element.trigger("disclosedAll.fu.tree",{tree:n.$element,disclosures:n.$element.data("disclosures")}),!n.options.cacheItems)n.$element.one("closeAll.fu.tree",function(){n.$element.data("disclosures",0)})}else{if(t&&(n.$element.trigger("exceededDisclosuresLimit.fu.tree",{tree:n.$element,disclosures:n.$element.data("disclosures")}),!n.$element.data("ignore-disclosures-limit")))return;n.$element.data("disclosures",n.$element.data("disclosures")+1);n.$element.one("disclosedVisible.fu.tree",function(){n.discloseAll()});n.discloseVisible()}},refreshFolder:function(n){var t=n.closest(".tree-branch"),i=t.find(".tree-branch-children");i.eq(0).empty();t.hasClass("tree-open")?this.populate(i,!1):this.populate(i,!0);this.$element.trigger("refreshedFolder.fu.tree",t.data())}};t.prototype.closeAll=t.prototype.collapse;t.prototype.openFolder=t.prototype.discloseFolder;t.prototype.getValue=t.prototype.selectedItems;n.fn.tree=function(i){var u=Array.prototype.slice.call(arguments,1),r,f=this.each(function(){var e=n(this),f=e.data("fu.tree"),o=typeof i=="object"&&i;f||e.data("fu.tree",f=new t(this,o));typeof i=="string"&&(r=f[i].apply(f,u))});return r===undefined?f:r};n.fn.tree.defaults={dataSource:function(){},multiSelect:!1,cacheItems:!0,folderSelect:!0,itemSelect:!0,disclosuresUpperLimit:0};n.fn.tree.Constructor=t;n.fn.tree.noConflict=function(){return n.fn.tree=u,this}});